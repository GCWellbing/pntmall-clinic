<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ClinicAdjust">
	<select id="list" parameterType="ClinicAdjustSearch" resultType="ClinicAdjust">
		SELECT A.SNO,
			   A.YEAR,
			   A.QUARTER,
			   A.MEM_NO,
			   A.ORDER_CNT,
			   A.TOT_SALE_AMT,
			   A.SALE_AMT,
			   A.PICKUP_SALE_AMT,
			   A.DPACK_SALE_AMT,
			   A.TOT_SUPPLY_AMT,
			   A.FEE,
			   A.PROMO_FEE,
			   A.PICKUP_FEE,
			   A.DPACK_FEE,
			   A.ADJUST_AMT,
			   A.STATUS,
			   A.DEADLINE,
			   A.PAYMENT_DATE,
			   A.SAP_RESULT,
			   B.CLINIC_ID,
			   B.CLINIC_NAME
	      FROM T_CLINIC_ADJUST A
	      		INNER JOIN T_CLINIC B
	      			ON A.MEM_NO = B.MEM_NO
	     WHERE A.MEM_NO = #{memNo}
		<if test="@com.pntmall.common.mybatis.Check@notEmpty(year)">
	       AND A.YEAR = #{year}
	    </if>
		<if test="@com.pntmall.common.mybatis.Check@notEmpty(quarter)">
	       AND A.QUARTER = #{quarter}
	    </if>
		<if test="@com.pntmall.common.mybatis.Check@notEmpty(year1)">
		   AND CONCAT(A.YEAR, A.QUARTER) >= CONCAT(#{year1}, #{quarter1})
		</if>
		<if test="@com.pntmall.common.mybatis.Check@notEmpty(year2)">
		<![CDATA[
		   AND CONCAT(A.YEAR, A.QUARTER) <= CONCAT(#{year2}, #{quarter2})
		]]>
		</if>
		ORDER BY A.SNO
	</select>

	<select id="count" parameterType="ClinicAdjustSearch" resultType="java.lang.Integer">
		SELECT COUNT(*)
	      FROM T_CLINIC_ADJUST A
	      		INNER JOIN T_CLINIC B
	      			ON A.MEM_NO = B.MEM_NO
	     WHERE A.MEM_NO = #{memNo}
		<if test="@com.pntmall.common.mybatis.Check@notEmpty(year)">
	       AND A.YEAR = #{year}
	    </if>
		<if test="@com.pntmall.common.mybatis.Check@notEmpty(quarter)">
	       AND A.QUARTER = #{quarter}
	    </if>
		<if test="@com.pntmall.common.mybatis.Check@notEmpty(year1)">
		   AND CONCAT(A.YEAR, A.QUARTER) >= CONCAT(#{year1}, #{quarter1})
		</if>
		<if test="@com.pntmall.common.mybatis.Check@notEmpty(year2)">
		<![CDATA[
		   AND CONCAT(A.YEAR, A.QUARTER) <= CONCAT(#{year2}, #{quarter2})
		]]>
		</if>
	</select>

	<select id="info" parameterType="ClinicAdjustSearch" resultType="ClinicAdjust">
		SELECT A.SNO,
			   A.YEAR,
			   A.QUARTER,
			   A.MEM_NO,
			   A.ORDER_CNT,
			   A.TOT_SALE_AMT,
			   A.SALE_AMT,
			   A.PICKUP_SALE_AMT,
			   A.DPACK_SALE_AMT,
			   A.TOT_SUPPLY_AMT,
			   A.FEE,
			   A.PROMO_FEE,
			   A.PICKUP_FEE,
			   A.DPACK_FEE,
			   A.ADJUST_AMT,
			   A.STATUS,
			   A.DEADLINE,
			   A.PAYMENT_DATE,
			   A.SAP_RESULT,
			   B.CLINIC_ID,
			   B.CLINIC_NAME
	      FROM T_CLINIC_ADJUST A
	      		INNER JOIN T_CLINIC B
	      			ON A.MEM_NO = B.MEM_NO
	     WHERE A.MEM_NO = #{memNo}
	       AND A.YEAR = #{year}
	       AND A.QUARTER = #{quarter}
	</select>

	<update id="updateStatus" parameterType="ClinicAdjust">
		UPDATE T_CLINIC_ADJUST
		   SET STATUS		= #{status},
		   	   UUSER		= #{cuser},
		   	   UDATE		= NOW()
		 WHERE SNO			= #{sno}
	</update>
	
	<insert id="insertStatusLog" parameterType="ClinicAdjust">
		INSERT INTO T_CLINIC_ADJUST_STATUS_LOG (
			SNO,
			STATUS,
			CUSER,
			CDATE
		) VALUES (
			#{sno},
			#{status},
			#{cuser},
			NOW()
		)
	</insert>
	
	<select id="detailList" parameterType="ClinicAdjust" resultType="ClinicAdjustDetail">
		<![CDATA[
		SELECT A.ORDERID,
			   A.GUBUN,
		       A.ORDER_GUBUN,
		       A.POINT,
		       A.SHIP_AMT,
		       A.TOT_DISCOUNT,
		       A.PAY_AMT,
			   A.STATUS,
		       B.BO_NAME,
		       (SELECT PNAME FROM T_ORDER_ITEM WHERE ORDERID = A.ORDERID LIMIT 1) PNAME,
		       (SELECT COUNT(*) FROM T_ORDER_ITEM WHERE ORDERID = A.ORDERID) ITEM_CNT,
		       (SELECT SUM(QTY) FROM T_ORDER_ITEM WHERE ORDERID = A.ORDERID) ITEM_QTY,
		       (SELECT SUM(P.SUPPLY_PRICE * I.QTY)
		          FROM T_ORDER_ITEM I
						INNER JOIN T_PRODUCT P
							ON I.PNO = P.PNO
				 WHERE I.ORDERID = A.ORDERID) SUPPLY_AMT,
			   (SELECT SUM(SALE_PRICE) FROM T_ORDER_ITEM WHERE ORDERID = A.ORDERID) SALE_AMT,
		       (SELECT MIN(CDATE) FROM T_ORDER_STATUS_LOG WHERE ORDERID = A.ORDERID AND STATUS = '180') CONFIRM_DATE,
		       (SELECT MIN(CDATE) FROM T_ORDER_STATUS_LOG WHERE ORDERID = A.ORDERID AND STATUS = '380') RETURN_DATE
		  FROM T_ORDER A
				INNER JOIN T_ORDER_STATUS_CODE B
					ON A.STATUS = B.STATUS
		 WHERE A.CLINIC_MEM_NO = #{memNo}
		   AND ((
				A.STATUS = '180'
				AND A.STATUS IN (SELECT STATUS FROM T_ORDER_STATUS_CODE WHERE ORDER_TYPE = 1)
				AND A.ORDERID IN (SELECT ORDERID FROM T_ORDER_STATUS_LOG 
								   WHERE ORDERID = A.ORDERID
								     AND STATUS = '180'
                                     AND CDATE >= STR_TO_DATE(CONCAT(#{year}, LPAD((#{quarter} - 1) * 3 + 1, 2, 0), '01'), '%Y%m%d') 
									 AND CDATE < DATE_ADD(STR_TO_DATE(CONCAT(#{year}, LPAD((#{quarter} - 1) * 3 + 1, 2, 0), '01'), '%Y%m%d'), INTERVAL 3 MONTH))
			   )
			   OR 
			   (
				A.STATUS = '380'
				AND A.ORDERID IN (SELECT ORDERID FROM T_ORDER_STATUS_LOG 
								   WHERE ORDERID = A.ORDERID
								     AND STATUS = '380'
                                     AND CDATE >= STR_TO_DATE(CONCAT(#{year}, LPAD((#{quarter} - 1) * 3 + 1, 2, 0), '01'), '%Y%m%d') 
									 AND CDATE < DATE_ADD(STR_TO_DATE(CONCAT(#{year}, LPAD((#{quarter} - 1) * 3 + 1, 2, 0), '01'), '%Y%m%d'), INTERVAL 3 MONTH))
			   ))
		]]>
	</select>
	
	
	
	
</mapper>